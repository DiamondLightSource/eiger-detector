[metadata]
name = eiger-detector
description = Eiger plugins for odin-control and odin-data
url = https//github.com/dls-controls/eiger-detector/python
author = Gary Yendell
author_email = gary.yendell@diamond.ac.uk
license = Apache License 2.0
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: Apache Software License
    Programming Language :: Python :: 3.7

[options]
python_requires = >=3.7
packages = find:
# =src is interpreted as {"": "src"}
# as per recommendation here https://hynek.me/articles/testing-packaging/
package_dir =
    =src

install_requires =
    odin-data[meta_writer] @ git+https://git@github.com/odin-detector/odin-data.git#subdirectory=python
    requests

[options.packages.find]
where = src

[options.extras_require]
dev =
    ruff
    pre-commit
    mypy
    # remove this dependency once flake8 has dropped "importlib-metadata <=4.3"
    # https://github.com/PyCQA/flake8/pull/1438
    flake8 <= 3.9.2
    flake8-isort
    pytest-cov
    pytest-asyncio
    h5py
    sphinx-rtd-theme-github-versions
    pydata-sphinx-theme>=0.12
    sphinx-autobuild
    sphinx-copybutton
    sphinx-design
    myst-parser
    tox-direct
    pre-commit
    requests
    typer
    pyzmq
sim =
    tickit-devices @ git+https://github.com/dls-controls/tickit-devices@eiger-stream2

[options.entry_points]
# Include a command line script
console_scripts =
    eiger_control = odin.main:main
    eiger_simulator = eiger_control.eiger_simulator:main
    eiger_meta_writer = odin_data.meta_writer.meta_writer_app:main

[mypy]
# Ignore missing stubs for modules we use
ignore_missing_imports = True

[isort]
profile=black
float_to_top=true
skip=setup.py,conf.py,build

[flake8]
# Make flake8 respect black's line length (default 88),
max-line-length = 88
extend-ignore =
    E203,  # See https://github.com/PyCQA/pycodestyle/issues/373
    F811, # support typing.overload decorator

[tool:pytest]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts =
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    --cov=eiger_detector --cov-report term --cov-report xml:cov.xml
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
filterwarnings = error
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths =
    tests

[coverage:run]
data_file = /tmp/eiger_detector.coverage

[coverage:paths]
# Tests are run from installed location, map back to the src directory
source =
    ./
    **/site-packages/

[versioneer]
VCS = git
style = pep440
versionfile_source = src/eiger_detector/_version.py
versionfile_build = eiger_detector/_version.py
tag_prefix=

[tox:tox]
skipsdist=True

[testenv:{pre-commit,type-checking,tests,docs}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals =
    pytest
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pre-commit: pre-commit run --show-diff-on-failure --files src/eiger_detector/data/*.py {posargs}
    # type-checking: mypy src tests {posargs}
    tests: pytest --cov=eiger_detector --cov-report term --cov-report xml:cov.xml {posargs}
    docs: sphinx-{posargs:build -EW --keep-going} -T ../docs ../build/html
